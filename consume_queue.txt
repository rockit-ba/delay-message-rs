ConsumeQueue

ConsumeQueue：消息消费队列，引入的目的主要是提高 消息消费的性能，由于是基于主题topic的订阅模式，消息消费是针对主题进行的，
如果要遍历commitlog文件,根据topic检索消息是非常低效的。

Consumer即可根据ConsumeQueue来查找待消费的消息。其中，ConsumeQueue（逻辑消费队列）作为消费消息的索引，保存了指定Topic下
的队列消息在CommitLog中的 [起始物理偏移量offset 8]，[消息大小size 4]和[消息Tag的HashCode值 8]. 1G内存可以存储5000万多条消息

consumequeue文件可以看成是基于topic的commitlog索引文件，故consumequeue文件夹的组织方式如下：
topic/queue/file三层组织结构，同样consumequeue文件采取定长设计，每一个条目共20个字节，
分别为8字节的commitlog物理偏移量、4字节的消息长度、8字节tag hashcode，单个文件由30W个条目组成.
可以像数组一样随机访问每一个条目，每个ConsumeQueue文件大小约5.72M；


在内存中有一个延迟队列，它维护着所有的延迟消息，这些消息会在到达指定的延迟时间后被发送。
定时任务会定期扫描延迟队列，将到期的消息发送出去。但是，如果延迟队列存储的消息太多，
不可能全部存储在内存中。所以部分消息会存储到磁盘上。对于磁盘上的消息，会采用分块存储的方式，
并使用二进制堆结构将其按照时间戳排序。这样可以避免频繁的磁盘读写操作，提高系统的性能。